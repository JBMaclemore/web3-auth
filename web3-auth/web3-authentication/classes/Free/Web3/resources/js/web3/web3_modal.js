"use strict";const Web3Modal=window.Web3Modal.default,WalletConnectProvider=window.WalletConnectProvider.default,APP_NAME="miniOrange web3 authentication";let web3Modal,provider,selectedAccount,web3ModalProv;function connectWithMetaMask(){web3Modal=new Web3Modal({cacheProvider:!1,providerOptions:{},disableInjectedProvider:!1})}function connectWithWalletConnect(){window.localStorage.removeItem("walletconnect"),web3Modal=new Web3Modal({cacheProvider:!1,providerOptions:{walletconnect:{package:WalletConnectProvider,options:{qrcode:!0,rpc:{1:"https://cloudflare-eth.com/",137:"https://polygon-rpc.com/"}}}},disableInjectedProvider:!0})}function connectWithCoinBase(){let e={"custom-coinbase":{display:{name:"Coinbase",description:"Scan with WalletLink to connect"},options:{appName:"app",chainId:1,rpc:{1:"https://cloudflare-eth.com/",137:"https://polygon-rpc.com/"}},package:WalletLink,async connector(e,o){let{appName:n,networkUrl:t,chainId:a,rpc:c}=o,r=new WalletLink({appName:n}),i=r.makeWeb3Provider(c,a);return await i.enable(),i}}};web3Modal=new Web3Modal({cacheProvider:!1,providerOptions:e,disableInjectedProvider:!0})}async function fetchAccountData(){web3ModalProv=new Web3(provider),provider.on("accountsChanged",e=>{console.log(e)}),provider.on("chainChanged",e=>{console.log(e)}),provider.on("disconnect",(e,o)=>{console.log(e,o)})}async function refreshAccountData(){await fetchAccountData(provider)}async function onConnectLoadWeb3Modal(){try{provider=await web3Modal.connect()}catch(e){return showMessage(e.message),"TypeError: Cannot read properties of undefined (reading 'connect')"==e&&showMessage("Click after page load","msg"),{err:e}}return await refreshAccountData(),{err:null}}const loginButtonMetamask=document.getElementById("buttonText");